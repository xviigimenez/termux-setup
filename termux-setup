#!/bin/bash
#   ______                              
#  /_  __/__  _________ ___  __  ___  __
#   / / / _ \/ ___/ __ `__ \/ / / / |/_/
#  / / /  __/ /  / / / / / / /_/ />  <  
# /_/  \___/_/  /_/ /_/ /_/\____/_/|_|  
#                                       
#         _____      __            
#        / ___/___  / /___  ______ 
#        \__ \/ _ \/ __/ / / / __ \
#       ___/ /  __/ /_/ /_/ / /_/ /
#      /____/\___/\__/\____/ ____/ 
#                         /_/      
#
# A script to set up Termux - Version 1.8

currentDir=$PWD &&
cd "$HOME" &&

printf "\nPlease confirm the prompts to follow.\n\n" && sleep 1

# Setup functions

setup_storage() {
    printf "Setting up storage...\n" && sleep 1 &&
    termux-setup-storage &&
    printf "Finished setting up the internal storage.\n" && sleep 1
}

setup_packages() {
    printf "Setting up packages...\n" && sleep 1 &&
    termux-change-repo &&
    pkg upgrade &&
    printf "Finished upgrading the default packages.\n" && sleep 1 &&
    pkg install man vim git openssh p7zip ffmpeg lf fd tree glow python nodejs htop gotop figlet cowsay &&
    printf "Finished installing packages from the Termux repositories.\n" && sleep 1 &&
    pip install --upgrade pip &&
    pip install wheel &&
    pip cache purge &&
    printf "Finished upgrading pip.\n" && sleep 1
}

setup_termux-style() {
    figlet -cf standard "termux-style" && sleep 1 &&
    git clone https://github.com/adi1090x/termux-style &&
    termux-style/install &&
    rm -rf termux-style/ &&
    printf "Finished setting up termux-style.\n" && sleep 1
}

setup_vim() {
    figlet -cf standard "vim" && sleep 1 &&
    printf "Setting up amix's awesome .vimrc...\n" &&
    git clone --depth=1 https://github.com/amix/vimrc.git "$HOME"/.vim_runtime &&
    sh "$HOME"/.vim_runtime/install_awesome_vimrc.sh &&
    printf "Finished setting up amix's configuration.\n" && sleep 1 &&
    printf "Installing other plugins via pathogen.vim...\n" && sleep 1 &&
    git clone https://github.com/vimwiki/vimwiki "$HOME"/.vim_runtime/my_plugins/vimwiki &&
    printf "Finished installing plugins.\n" && sleep 1
}

setup_yt-dlp() {
    figlet -cf standard "yt-dlp" && sleep 1 &&
    pip install -U yt-dlp &&
    pip cache purge &&
    yt-dlp --version &&
    printf "Finished setting up yt-dlp.\n" && sleep 1
}

setup_gallery-dl() {
    figlet -cf standard "gallery-dl" && sleep 1 &&
    pip install -U gallery-dl &&
    pip cache purge &&
    gallery-dl --version &&
    printf "Finished setting up gallery-dl.\n" && sleep 1
}

setup_diskonaut() {
    figlet -cf standard "diskonaut" && sleep 1 &&
    pkg install rust &&
    cargo install diskonaut &&
    while [[ "$yn" =~ ^[YyNn] ]]; do
        read -rp "Keep rust installed? [y/n] " yn &&
        if [ "$yn" = "y" ] || [ "$yn" = "Y" ]
        then
            echo 'PATH=$PATH:"$HOME"/.cargo/bin && export PATH' >> "$HOME"/.bashrc
        elif [ "$yn" = "n" ] || [ "$yn" = "N" ]
        then
            mkdir -p "$HOME"/.bin &&
            mv -v "$HOME"/.cargo/bin/diskonaut "$HOME"/.bin/ &&
            pkg remove rust &&
            rm -rf "$HOME"/.cargo/
        else
            echo 'Please enter either "y" or "n".'
        fi
    done &&
    printf "Finished setting up diskonaut.\n" && sleep 1
}

setup_apache() {
    figlet -cf standard "apache" && sleep 1 &&
	pkg install termux-services apache2 &&
	sv-enable httpd &&
	echo 'export apache2="/data/data/com.termux/files/usr/etc/apache2/" &&' >> "$HOME"/.bashrc &&
	echo 'export htdocs="/data/data/com.termux/files/usr/share/apache2/default-site/htdocs"' >> "$HOME"/.bashrc &&
    source "$HOME"/.bashrc &&
	printf "Your 'apache2' folder is:\n$apache2" &&
    printf "Your 'htdocs' folder is:\n$htdocs" &&
    printf "Finished setting up the apache web server.\n" && sleep 1
}

if [ "$1" = "storage" ]
then
    setup_storage
fi

if [ "$1" = "packages" ]
then
    setup_packages
fi

if [ "$1" = "termux-style" ]
then
    setup_termux-style
fi

if [ "$1" = "vimrc" ]
then
    setup_vimrc
fi

if [ "$1" = "yt-dlp" ]
then
    setup_yt-dlp
fi

if [ "$1" = "gallery-dl" ]
then
    setup_gallery-dl
fi

if [ "$1" = "diskonaut" ]
then
    setup_diskonaut
fi

if [ "$1" = "apache" ]
then
    setup_apache
fi

if [ "$1" = "all" ]
then
    all() {
        setup_storage &&
        setup_packages &&
        setup_termux-style &&
        setup_vimrc &&
        setup_yt-dlp &&
        setup_gallery-dl &&
        # setup_diskonaut &&
        # setup_apache
        setup_diskonaut
    }
    time all &&
    printf "\nThe setup completed successfully.\nPlease enjoy your installation.\n"
fi

# Other functions

terminal_settings() {
    vim "$HOME"/.termux/termux.properties &&
    termux-reload-settings
}

create_backup() {
    # /sdcard is the internal storage
    tar -vzcf /sdcard/termux_backup-"$(date +%Y-%m-%d)".tar.gz -C /data/data/com.termux/files ./home ./usr
}

restore_backup() {
    # all files will be overwritten during the restoration process
    read  -rp "Enter the location to the backup file: " file
    tar -vzxf "$file" -C /data/data/com.termux/files --recursive-unlink --preserve-permissions
}

if [ "$1" = "settings" ]
then
    terminal_settings
fi

if [ "$1" = "backup" ]
then
    create_backup
fi

if [ "$1" = "restore" ]
then
    restore_backup
fi

cd "$currentDir"
